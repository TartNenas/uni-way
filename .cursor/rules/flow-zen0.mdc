---
description: 
globs: 
alwaysApply: true
---

// React TS, React + Styled Components .cursorrules

// Prefer functional components with hooks

const preferFunctionalComponents = true;

// Styled Components best practices

const styledComponentsBestPractices = [
  "do not change what the user didnt ask you to change",
  "Use the styled-components/macro for better debugging",
  "Implement a global theme using ThemeProvider",
  "Create reusable styled components",
  "Use props for dynamic styling",
  "Utilize TailwindCSS helper functions `` when needed",
];

// Folder structure

const folderStructure = `
com.abc.console.web/
├── src/
│   ├── components/   # Reusable React components
│   ├── pages/        # Page components
│   ├── assets/       # Static files (images, icons, etc.)
│   ├── styles/       # Tailwind CSS configurations
│   └── utils/        # Helper functions
├── public/           # Publicly available assets
├── .env              # Environment variables
├── package.json      # Dependency list
├── vite.config.js    # Vite configuration
Contributing
Fork the repository.
`;

// Additional instructions

const additionalInstructions = `
1. Use proper naming conventions for styled components (e.g., StyledButton)
2. Implement a consistent theming system
3. Use Tailwind CSS-in-TS for all styling needs
4. Utilize styled-components' attrs method for frequently used props
5. Implement proper TypeScript support for styled-components
6. Use the Tailwindcss prop for conditional styling when appropriate
7. Follow the styled-components documentation for best practices
8. Use React Ts, Node, json,
9. put cursor rules inside gitignore
10. when creating new page tsx default theme is dark, design must be modern an clean. try to have best consistency
12. dont use babel.js
`;

